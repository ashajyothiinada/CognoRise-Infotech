{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/ashajyothiinada562/car-price-prediction?scriptVersionId=184698471\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","execution_count":1,"id":"4ef42658","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","execution":{"iopub.execute_input":"2024-06-21T08:14:32.390432Z","iopub.status.busy":"2024-06-21T08:14:32.389929Z","iopub.status.idle":"2024-06-21T08:14:33.188736Z","shell.execute_reply":"2024-06-21T08:14:33.187756Z"},"papermill":{"duration":0.810858,"end_time":"2024-06-21T08:14:33.19105","exception":false,"start_time":"2024-06-21T08:14:32.380192","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["/kaggle/input/car-data/CarPrice_Assignment.csv\n","/kaggle/input/car-data/Data Dictionary - carprices.xlsx\n","/kaggle/input/test-file/tested.csv\n"]}],"source":["# This Python 3 environment comes with many helpful analytics libraries installed\n","# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n","# For example, here's several helpful packages to load\n","\n","import numpy as np # linear algebra\n","import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n","\n","# Input data files are available in the read-only \"../input/\" directory\n","# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n","\n","import os\n","for dirname, _, filenames in os.walk('/kaggle/input'):\n","    for filename in filenames:\n","        print(os.path.join(dirname, filename))\n","\n","# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n","# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"]},{"cell_type":"code","execution_count":2,"id":"dd7be867","metadata":{"execution":{"iopub.execute_input":"2024-06-21T08:14:33.207496Z","iopub.status.busy":"2024-06-21T08:14:33.206758Z","iopub.status.idle":"2024-06-21T08:14:34.726666Z","shell.execute_reply":"2024-06-21T08:14:34.725741Z"},"papermill":{"duration":1.530883,"end_time":"2024-06-21T08:14:34.729336","exception":false,"start_time":"2024-06-21T08:14:33.198453","status":"completed"},"tags":[]},"outputs":[],"source":["import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.linear_model import LinearRegression,Ridge,Lasso\n","from sklearn.metrics import r2_score,mean_absolute_error,mean_squared_error"]},{"cell_type":"code","execution_count":3,"id":"eb3fe66d","metadata":{"execution":{"iopub.execute_input":"2024-06-21T08:14:34.746713Z","iopub.status.busy":"2024-06-21T08:14:34.745971Z","iopub.status.idle":"2024-06-21T08:14:34.800769Z","shell.execute_reply":"2024-06-21T08:14:34.799728Z"},"papermill":{"duration":0.066375,"end_time":"2024-06-21T08:14:34.803453","exception":false,"start_time":"2024-06-21T08:14:34.737078","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>car_ID</th>\n","      <th>symboling</th>\n","      <th>CarName</th>\n","      <th>fueltype</th>\n","      <th>aspiration</th>\n","      <th>doornumber</th>\n","      <th>carbody</th>\n","      <th>drivewheel</th>\n","      <th>enginelocation</th>\n","      <th>wheelbase</th>\n","      <th>...</th>\n","      <th>enginesize</th>\n","      <th>fuelsystem</th>\n","      <th>boreratio</th>\n","      <th>stroke</th>\n","      <th>compressionratio</th>\n","      <th>horsepower</th>\n","      <th>peakrpm</th>\n","      <th>citympg</th>\n","      <th>highwaympg</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>alfa-romero giulia</td>\n","      <td>gas</td>\n","      <td>std</td>\n","      <td>two</td>\n","      <td>convertible</td>\n","      <td>rwd</td>\n","      <td>front</td>\n","      <td>88.6</td>\n","      <td>...</td>\n","      <td>130</td>\n","      <td>mpfi</td>\n","      <td>3.47</td>\n","      <td>2.68</td>\n","      <td>9.0</td>\n","      <td>111</td>\n","      <td>5000</td>\n","      <td>21</td>\n","      <td>27</td>\n","      <td>13495.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>alfa-romero stelvio</td>\n","      <td>gas</td>\n","      <td>std</td>\n","      <td>two</td>\n","      <td>convertible</td>\n","      <td>rwd</td>\n","      <td>front</td>\n","      <td>88.6</td>\n","      <td>...</td>\n","      <td>130</td>\n","      <td>mpfi</td>\n","      <td>3.47</td>\n","      <td>2.68</td>\n","      <td>9.0</td>\n","      <td>111</td>\n","      <td>5000</td>\n","      <td>21</td>\n","      <td>27</td>\n","      <td>16500.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>alfa-romero Quadrifoglio</td>\n","      <td>gas</td>\n","      <td>std</td>\n","      <td>two</td>\n","      <td>hatchback</td>\n","      <td>rwd</td>\n","      <td>front</td>\n","      <td>94.5</td>\n","      <td>...</td>\n","      <td>152</td>\n","      <td>mpfi</td>\n","      <td>2.68</td>\n","      <td>3.47</td>\n","      <td>9.0</td>\n","      <td>154</td>\n","      <td>5000</td>\n","      <td>19</td>\n","      <td>26</td>\n","      <td>16500.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>audi 100 ls</td>\n","      <td>gas</td>\n","      <td>std</td>\n","      <td>four</td>\n","      <td>sedan</td>\n","      <td>fwd</td>\n","      <td>front</td>\n","      <td>99.8</td>\n","      <td>...</td>\n","      <td>109</td>\n","      <td>mpfi</td>\n","      <td>3.19</td>\n","      <td>3.40</td>\n","      <td>10.0</td>\n","      <td>102</td>\n","      <td>5500</td>\n","      <td>24</td>\n","      <td>30</td>\n","      <td>13950.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>audi 100ls</td>\n","      <td>gas</td>\n","      <td>std</td>\n","      <td>four</td>\n","      <td>sedan</td>\n","      <td>4wd</td>\n","      <td>front</td>\n","      <td>99.4</td>\n","      <td>...</td>\n","      <td>136</td>\n","      <td>mpfi</td>\n","      <td>3.19</td>\n","      <td>3.40</td>\n","      <td>8.0</td>\n","      <td>115</td>\n","      <td>5500</td>\n","      <td>18</td>\n","      <td>22</td>\n","      <td>17450.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 26 columns</p>\n","</div>"],"text/plain":["   car_ID  symboling                   CarName fueltype aspiration doornumber  \\\n","0       1          3        alfa-romero giulia      gas        std        two   \n","1       2          3       alfa-romero stelvio      gas        std        two   \n","2       3          1  alfa-romero Quadrifoglio      gas        std        two   \n","3       4          2               audi 100 ls      gas        std       four   \n","4       5          2                audi 100ls      gas        std       four   \n","\n","       carbody drivewheel enginelocation  wheelbase  ...  enginesize  \\\n","0  convertible        rwd          front       88.6  ...         130   \n","1  convertible        rwd          front       88.6  ...         130   \n","2    hatchback        rwd          front       94.5  ...         152   \n","3        sedan        fwd          front       99.8  ...         109   \n","4        sedan        4wd          front       99.4  ...         136   \n","\n","   fuelsystem  boreratio  stroke compressionratio horsepower  peakrpm citympg  \\\n","0        mpfi       3.47    2.68              9.0        111     5000      21   \n","1        mpfi       3.47    2.68              9.0        111     5000      21   \n","2        mpfi       2.68    3.47              9.0        154     5000      19   \n","3        mpfi       3.19    3.40             10.0        102     5500      24   \n","4        mpfi       3.19    3.40              8.0        115     5500      18   \n","\n","   highwaympg    price  \n","0          27  13495.0  \n","1          27  16500.0  \n","2          26  16500.0  \n","3          30  13950.0  \n","4          22  17450.0  \n","\n","[5 rows x 26 columns]"]},"execution_count":3,"metadata":{},"output_type":"execute_result"}],"source":["df=pd.read_csv('/kaggle/input/car-data/CarPrice_Assignment.csv')\n","df.head()"]},{"cell_type":"code","execution_count":4,"id":"4d53877f","metadata":{"execution":{"iopub.execute_input":"2024-06-21T08:14:34.821231Z","iopub.status.busy":"2024-06-21T08:14:34.820846Z","iopub.status.idle":"2024-06-21T08:14:34.827561Z","shell.execute_reply":"2024-06-21T08:14:34.82654Z"},"papermill":{"duration":0.018074,"end_time":"2024-06-21T08:14:34.829777","exception":false,"start_time":"2024-06-21T08:14:34.811703","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["(205, 26)"]},"execution_count":4,"metadata":{},"output_type":"execute_result"}],"source":["df.shape"]},{"cell_type":"code","execution_count":5,"id":"f0a44ee1","metadata":{"execution":{"iopub.execute_input":"2024-06-21T08:14:34.84845Z","iopub.status.busy":"2024-06-21T08:14:34.84758Z","iopub.status.idle":"2024-06-21T08:14:34.867085Z","shell.execute_reply":"2024-06-21T08:14:34.866098Z"},"papermill":{"duration":0.031355,"end_time":"2024-06-21T08:14:34.869571","exception":false,"start_time":"2024-06-21T08:14:34.838216","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 205 entries, 0 to 204\n","Data columns (total 26 columns):\n"," #   Column            Non-Null Count  Dtype  \n","---  ------            --------------  -----  \n"," 0   car_ID            205 non-null    int64  \n"," 1   symboling         205 non-null    int64  \n"," 2   CarName           205 non-null    object \n"," 3   fueltype          205 non-null    object \n"," 4   aspiration        205 non-null    object \n"," 5   doornumber        205 non-null    object \n"," 6   carbody           205 non-null    object \n"," 7   drivewheel        205 non-null    object \n"," 8   enginelocation    205 non-null    object \n"," 9   wheelbase         205 non-null    float64\n"," 10  carlength         205 non-null    float64\n"," 11  carwidth          205 non-null    float64\n"," 12  carheight         205 non-null    float64\n"," 13  curbweight        205 non-null    int64  \n"," 14  enginetype        205 non-null    object \n"," 15  cylindernumber    205 non-null    object \n"," 16  enginesize        205 non-null    int64  \n"," 17  fuelsystem        205 non-null    object \n"," 18  boreratio         205 non-null    float64\n"," 19  stroke            205 non-null    float64\n"," 20  compressionratio  205 non-null    float64\n"," 21  horsepower        205 non-null    int64  \n"," 22  peakrpm           205 non-null    int64  \n"," 23  citympg           205 non-null    int64  \n"," 24  highwaympg        205 non-null    int64  \n"," 25  price             205 non-null    float64\n","dtypes: float64(8), int64(8), object(10)\n","memory usage: 41.8+ KB\n"]}],"source":["df.info()"]},{"cell_type":"code","execution_count":6,"id":"fa18763a","metadata":{"execution":{"iopub.execute_input":"2024-06-21T08:14:34.88845Z","iopub.status.busy":"2024-06-21T08:14:34.887567Z","iopub.status.idle":"2024-06-21T08:14:34.894973Z","shell.execute_reply":"2024-06-21T08:14:34.894008Z"},"papermill":{"duration":0.019485,"end_time":"2024-06-21T08:14:34.897528","exception":false,"start_time":"2024-06-21T08:14:34.878043","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["['CarName',\n"," 'fueltype',\n"," 'aspiration',\n"," 'doornumber',\n"," 'carbody',\n"," 'drivewheel',\n"," 'enginelocation',\n"," 'enginetype',\n"," 'cylindernumber',\n"," 'fuelsystem']"]},"execution_count":6,"metadata":{},"output_type":"execute_result"}],"source":["column_object_datatype=df.select_dtypes(include='object').columns.tolist()\n","column_object_datatype"]},{"cell_type":"code","execution_count":7,"id":"f433cb7a","metadata":{"execution":{"iopub.execute_input":"2024-06-21T08:14:34.91635Z","iopub.status.busy":"2024-06-21T08:14:34.915667Z","iopub.status.idle":"2024-06-21T08:14:34.931317Z","shell.execute_reply":"2024-06-21T08:14:34.930408Z"},"papermill":{"duration":0.027809,"end_time":"2024-06-21T08:14:34.933945","exception":false,"start_time":"2024-06-21T08:14:34.906136","status":"completed"},"tags":[]},"outputs":[],"source":["df_ohe=pd.get_dummies(df[column_object_datatype],dtype='int')"]},{"cell_type":"code","execution_count":8,"id":"835c074f","metadata":{"execution":{"iopub.execute_input":"2024-06-21T08:14:34.953483Z","iopub.status.busy":"2024-06-21T08:14:34.952697Z","iopub.status.idle":"2024-06-21T08:14:34.973142Z","shell.execute_reply":"2024-06-21T08:14:34.972147Z"},"papermill":{"duration":0.032839,"end_time":"2024-06-21T08:14:34.975654","exception":false,"start_time":"2024-06-21T08:14:34.942815","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CarName_Nissan versa</th>\n","      <th>CarName_alfa-romero Quadrifoglio</th>\n","      <th>CarName_alfa-romero giulia</th>\n","      <th>CarName_alfa-romero stelvio</th>\n","      <th>CarName_audi 100 ls</th>\n","      <th>CarName_audi 100ls</th>\n","      <th>CarName_audi 4000</th>\n","      <th>CarName_audi 5000</th>\n","      <th>CarName_audi 5000s (diesel)</th>\n","      <th>CarName_audi fox</th>\n","      <th>...</th>\n","      <th>cylindernumber_twelve</th>\n","      <th>cylindernumber_two</th>\n","      <th>fuelsystem_1bbl</th>\n","      <th>fuelsystem_2bbl</th>\n","      <th>fuelsystem_4bbl</th>\n","      <th>fuelsystem_idi</th>\n","      <th>fuelsystem_mfi</th>\n","      <th>fuelsystem_mpfi</th>\n","      <th>fuelsystem_spdi</th>\n","      <th>fuelsystem_spfi</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 185 columns</p>\n","</div>"],"text/plain":["   CarName_Nissan versa  CarName_alfa-romero Quadrifoglio  \\\n","0                     0                                 0   \n","1                     0                                 0   \n","2                     0                                 1   \n","3                     0                                 0   \n","4                     0                                 0   \n","\n","   CarName_alfa-romero giulia  CarName_alfa-romero stelvio  \\\n","0                           1                            0   \n","1                           0                            1   \n","2                           0                            0   \n","3                           0                            0   \n","4                           0                            0   \n","\n","   CarName_audi 100 ls  CarName_audi 100ls  CarName_audi 4000  \\\n","0                    0                   0                  0   \n","1                    0                   0                  0   \n","2                    0                   0                  0   \n","3                    1                   0                  0   \n","4                    0                   1                  0   \n","\n","   CarName_audi 5000  CarName_audi 5000s (diesel)  CarName_audi fox  ...  \\\n","0                  0                            0                 0  ...   \n","1                  0                            0                 0  ...   \n","2                  0                            0                 0  ...   \n","3                  0                            0                 0  ...   \n","4                  0                            0                 0  ...   \n","\n","   cylindernumber_twelve  cylindernumber_two  fuelsystem_1bbl  \\\n","0                      0                   0                0   \n","1                      0                   0                0   \n","2                      0                   0                0   \n","3                      0                   0                0   \n","4                      0                   0                0   \n","\n","   fuelsystem_2bbl  fuelsystem_4bbl  fuelsystem_idi  fuelsystem_mfi  \\\n","0                0                0               0               0   \n","1                0                0               0               0   \n","2                0                0               0               0   \n","3                0                0               0               0   \n","4                0                0               0               0   \n","\n","   fuelsystem_mpfi  fuelsystem_spdi  fuelsystem_spfi  \n","0                1                0                0  \n","1                1                0                0  \n","2                1                0                0  \n","3                1                0                0  \n","4                1                0                0  \n","\n","[5 rows x 185 columns]"]},"execution_count":8,"metadata":{},"output_type":"execute_result"}],"source":["df_ohe.head()"]},{"cell_type":"code","execution_count":9,"id":"23a2d9f4","metadata":{"execution":{"iopub.execute_input":"2024-06-21T08:14:34.994866Z","iopub.status.busy":"2024-06-21T08:14:34.994458Z","iopub.status.idle":"2024-06-21T08:14:35.000253Z","shell.execute_reply":"2024-06-21T08:14:34.999219Z"},"papermill":{"duration":0.017953,"end_time":"2024-06-21T08:14:35.002528","exception":false,"start_time":"2024-06-21T08:14:34.984575","status":"completed"},"tags":[]},"outputs":[],"source":["df1=df.drop(columns=column_object_datatype)"]},{"cell_type":"code","execution_count":10,"id":"bba9ebc2","metadata":{"execution":{"iopub.execute_input":"2024-06-21T08:14:35.022282Z","iopub.status.busy":"2024-06-21T08:14:35.021893Z","iopub.status.idle":"2024-06-21T08:14:35.028316Z","shell.execute_reply":"2024-06-21T08:14:35.027324Z"},"papermill":{"duration":0.019112,"end_time":"2024-06-21T08:14:35.030768","exception":false,"start_time":"2024-06-21T08:14:35.011656","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["(205, 16)"]},"execution_count":10,"metadata":{},"output_type":"execute_result"}],"source":["df1.shape"]},{"cell_type":"code","execution_count":11,"id":"1b78a423","metadata":{"execution":{"iopub.execute_input":"2024-06-21T08:14:35.051443Z","iopub.status.busy":"2024-06-21T08:14:35.050493Z","iopub.status.idle":"2024-06-21T08:14:35.060218Z","shell.execute_reply":"2024-06-21T08:14:35.059244Z"},"papermill":{"duration":0.022477,"end_time":"2024-06-21T08:14:35.062538","exception":false,"start_time":"2024-06-21T08:14:35.040061","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["(205, 201)"]},"execution_count":11,"metadata":{},"output_type":"execute_result"}],"source":["df_final=pd.concat([df1,df_ohe],axis=1)\n","df_final.shape"]},{"cell_type":"code","execution_count":12,"id":"2d0c9778","metadata":{"execution":{"iopub.execute_input":"2024-06-21T08:14:35.082942Z","iopub.status.busy":"2024-06-21T08:14:35.082421Z","iopub.status.idle":"2024-06-21T08:14:35.088577Z","shell.execute_reply":"2024-06-21T08:14:35.087645Z"},"papermill":{"duration":0.018968,"end_time":"2024-06-21T08:14:35.090863","exception":false,"start_time":"2024-06-21T08:14:35.071895","status":"completed"},"tags":[]},"outputs":[],"source":["x=df_final.drop(columns=['price'])\n","y=df_final.price"]},{"cell_type":"code","execution_count":13,"id":"5e8649cb","metadata":{"execution":{"iopub.execute_input":"2024-06-21T08:14:35.111001Z","iopub.status.busy":"2024-06-21T08:14:35.110544Z","iopub.status.idle":"2024-06-21T08:14:35.119973Z","shell.execute_reply":"2024-06-21T08:14:35.119125Z"},"papermill":{"duration":0.022161,"end_time":"2024-06-21T08:14:35.122284","exception":false,"start_time":"2024-06-21T08:14:35.100123","status":"completed"},"tags":[]},"outputs":[],"source":["from sklearn.model_selection import train_test_split\n","(x_train,x_test,y_train,y_test)=train_test_split(x,y,test_size=0.2,random_state=10)"]},{"cell_type":"code","execution_count":14,"id":"60c1dafd","metadata":{"execution":{"iopub.execute_input":"2024-06-21T08:14:35.142436Z","iopub.status.busy":"2024-06-21T08:14:35.142043Z","iopub.status.idle":"2024-06-21T08:14:35.146863Z","shell.execute_reply":"2024-06-21T08:14:35.145794Z"},"papermill":{"duration":0.017495,"end_time":"2024-06-21T08:14:35.149082","exception":false,"start_time":"2024-06-21T08:14:35.131587","status":"completed"},"tags":[]},"outputs":[],"source":["linear_model=LinearRegression()\n","lasso_model=Lasso()\n","ridge_model=Ridge()\n"]},{"cell_type":"code","execution_count":15,"id":"de9c8761","metadata":{"execution":{"iopub.execute_input":"2024-06-21T08:14:35.16997Z","iopub.status.busy":"2024-06-21T08:14:35.169039Z","iopub.status.idle":"2024-06-21T08:14:35.34006Z","shell.execute_reply":"2024-06-21T08:14:35.338841Z"},"papermill":{"duration":0.185915,"end_time":"2024-06-21T08:14:35.344209","exception":false,"start_time":"2024-06-21T08:14:35.158294","status":"completed"},"tags":[]},"outputs":[{"name":"stderr","output_type":"stream","text":["/opt/conda/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.318e+07, tolerance: 1.088e+06\n","  model = cd_fast.enet_coordinate_descent(\n"]},{"data":{"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Ridge()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Ridge</label><div class=\"sk-toggleable__content\"><pre>Ridge()</pre></div></div></div></div></div>"],"text/plain":["Ridge()"]},"execution_count":15,"metadata":{},"output_type":"execute_result"}],"source":["linear_model.fit(x_train,y_train)\n","lasso_model.fit(x_train,y_train)\n","ridge_model.fit(x_train,y_train)"]},{"cell_type":"code","execution_count":16,"id":"3e59f232","metadata":{"execution":{"iopub.execute_input":"2024-06-21T08:14:35.426869Z","iopub.status.busy":"2024-06-21T08:14:35.425437Z","iopub.status.idle":"2024-06-21T08:14:35.458896Z","shell.execute_reply":"2024-06-21T08:14:35.457709Z"},"papermill":{"duration":0.079647,"end_time":"2024-06-21T08:14:35.461475","exception":false,"start_time":"2024-06-21T08:14:35.381828","status":"completed"},"tags":[]},"outputs":[],"source":["linear_pred=linear_model.predict(x_test)\n","lasso_pred=linear_model.predict(x_test)\n","ridge_pred=linear_model.predict(x_test)"]},{"cell_type":"code","execution_count":17,"id":"cdbedd49","metadata":{"execution":{"iopub.execute_input":"2024-06-21T08:14:35.486303Z","iopub.status.busy":"2024-06-21T08:14:35.48541Z","iopub.status.idle":"2024-06-21T08:14:35.492542Z","shell.execute_reply":"2024-06-21T08:14:35.491473Z"},"papermill":{"duration":0.020692,"end_time":"2024-06-21T08:14:35.495056","exception":false,"start_time":"2024-06-21T08:14:35.474364","status":"completed"},"tags":[]},"outputs":[],"source":["r2_linear=r2_score(y_test,linear_pred)\n","r2_lasso=r2_score(y_test,linear_pred)\n","r2_ridge=r2_score(y_test,linear_pred)"]},{"cell_type":"code","execution_count":18,"id":"3b5dbb75","metadata":{"execution":{"iopub.execute_input":"2024-06-21T08:14:35.51625Z","iopub.status.busy":"2024-06-21T08:14:35.515496Z","iopub.status.idle":"2024-06-21T08:14:35.520787Z","shell.execute_reply":"2024-06-21T08:14:35.519876Z"},"papermill":{"duration":0.018836,"end_time":"2024-06-21T08:14:35.523588","exception":false,"start_time":"2024-06-21T08:14:35.504752","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["f'Linear Regression Model Score:{r2_linear}.\n","Lasso Model Score:{r2_lasso}.\n","Ridge Model Score:{r2_ridge}.\n"]}],"source":["print(\"f'Linear Regression Model Score:{r2_linear}.\\nLasso Model Score:{r2_lasso}.\\nRidge Model Score:{r2_ridge}.\")"]},{"cell_type":"code","execution_count":19,"id":"b83af5a6","metadata":{"execution":{"iopub.execute_input":"2024-06-21T08:14:35.545198Z","iopub.status.busy":"2024-06-21T08:14:35.544315Z","iopub.status.idle":"2024-06-21T08:14:35.865653Z","shell.execute_reply":"2024-06-21T08:14:35.864575Z"},"papermill":{"duration":0.33445,"end_time":"2024-06-21T08:14:35.867865","exception":false,"start_time":"2024-06-21T08:14:35.533415","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7d052a1d9a50>]"]},"execution_count":19,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["plt.scatter(y_test,linear_pred,alpha=0.5,color='r',label='Actual vs. Predicted')\n","best_fit_line=np.polyfit(y_test,lasso_pred,1)\n","plt.plot(y_test,np.polyval(best_fit_line,y_test),color='b',label='Best Fit Line')"]},{"cell_type":"code","execution_count":20,"id":"a1938f1b","metadata":{"execution":{"iopub.execute_input":"2024-06-21T08:14:35.889567Z","iopub.status.busy":"2024-06-21T08:14:35.889203Z","iopub.status.idle":"2024-06-21T08:14:36.122829Z","shell.execute_reply":"2024-06-21T08:14:36.121653Z"},"papermill":{"duration":0.24736,"end_time":"2024-06-21T08:14:36.125215","exception":false,"start_time":"2024-06-21T08:14:35.877855","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7d052a0da230>]"]},"execution_count":20,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["plt.scatter(y_test,lasso_pred,alpha=0.5,color='g',label='Actual vs. Predicted')\n","best_fit_line=np.polyfit(y_test,lasso_pred,1)\n","plt.plot(y_test,np.polyval(best_fit_line,y_test),color='y',label='Best_Fit_Line')"]},{"cell_type":"code","execution_count":21,"id":"674ecc3d","metadata":{"execution":{"iopub.execute_input":"2024-06-21T08:14:36.14917Z","iopub.status.busy":"2024-06-21T08:14:36.148769Z","iopub.status.idle":"2024-06-21T08:14:36.386785Z","shell.execute_reply":"2024-06-21T08:14:36.38566Z"},"papermill":{"duration":0.252957,"end_time":"2024-06-21T08:14:36.389358","exception":false,"start_time":"2024-06-21T08:14:36.136401","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7d052a1690c0>]"]},"execution_count":21,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["plt.scatter(y_test,ridge_pred,alpha=0.5,color='m',label='Actual vs. Predicted')\n","best_fit_line=np.polyfit(y_test,ridge_pred,1)\n","plt.plot(y_test,np.polyval(best_fit_line,y_test),color='c',label='Best_Fit_Line')"]},{"cell_type":"code","execution_count":22,"id":"36423cd1","metadata":{"execution":{"iopub.execute_input":"2024-06-21T08:14:36.416529Z","iopub.status.busy":"2024-06-21T08:14:36.415597Z","iopub.status.idle":"2024-06-21T08:14:36.497101Z","shell.execute_reply":"2024-06-21T08:14:36.493274Z"},"papermill":{"duration":0.100616,"end_time":"2024-06-21T08:14:36.501696","exception":false,"start_time":"2024-06-21T08:14:36.40108","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Linear Regression train dataset score:0.9983701921177449\n","LinearRegression test dataset score:0.045223949442942724\n","Lasso Regression train dataset score:0.9951455378972708\n","Lasso test dataset score:0.9047256458098692\n","ridge Regression train dataset score:0.9802169788103096\n","ridge test dataset score:0.7795362643305386\n"]}],"source":["print(f\"Linear Regression train dataset score:{linear_model.score(x_train,y_train)}\\nLinearRegression test dataset score:{linear_model.score(x_test,y_test)}\")\n","print(f\"Lasso Regression train dataset score:{lasso_model.score(x_train,y_train)}\\nLasso test dataset score:{lasso_model.score(x_test,y_test)}\")\n","print(f\"ridge Regression train dataset score:{ridge_model.score(x_train,y_train)}\\nridge test dataset score:{ridge_model.score(x_test,y_test)}\")"]}],"metadata":{"kaggle":{"accelerator":"none","dataSources":[{"datasetId":175168,"sourceId":395113,"sourceType":"datasetVersion"},{"datasetId":826163,"sourceId":2879186,"sourceType":"datasetVersion"}],"dockerImageVersionId":30732,"isGpuEnabled":false,"isInternetEnabled":false,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.13"},"papermill":{"default_parameters":{},"duration":7.520888,"end_time":"2024-06-21T08:14:37.156784","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2024-06-21T08:14:29.635896","version":"2.5.0"}},"nbformat":4,"nbformat_minor":5}